{
    "collab_server" : "",
    "contents" : "#' Time Series Plot\n#'\n#' Generate Time Series Plot\n#' @param cgm.data: A dataframe of CGM data formatted by format_dexcom()\n#' @param informative.cgm.meta: A dataframe of CGM meta data formatted by format_dexcom()\n#' @param file.name: The name of the output file\n#' @param month: The corresponding month to plot\n#' @param overlay: a logical value (TRUE of FALSE). If TRUE, the insulin and/or carbs intake will be overlay on top of time series plot\n#' @export\n#' @import ggplot2\n#'\nmonthly_time_series_plot <- function(cgm.data, informative.cgm.meta,\n                                     file.name, month, overlay=FALSE){\n\n  stopifnot(is.character(month))\n  cgm.data <- cgm.data[cgm.data$TP==month, ]\n  informative.cgm.meta <- informative.cgm.meta[informative.cgm.meta$TP==month, ]\n\n  bp_trend <- ggplot(data=cgm.data, aes(x=Day_Time, y=Glucose_Value_mg_dL)) +\n    geom_point(size=2) +\n    geom_point(data=cgm.data[cgm.data$Event_Type=='Calibration', ],\n               aes(x=Day_Time, y=Glucose_Value_mg_dL), colour='red', size=2) +\n    geom_rect(data=informative.cgm.meta, aes(ymin=0, ymax=as.numeric(`Urgent Low`), xmin=-Inf, xmax=Inf),\n              fill='#FF0000', alpha=0.1, inherit.aes=FALSE) +\n    geom_rect(data=informative.cgm.meta, aes(ymin=as.numeric(`Urgent Low`), ymax=as.numeric(Low), xmin=-Inf, xmax=Inf),\n              fill='#FFA500', alpha=0.1, inherit.aes=FALSE) +\n    geom_rect(data=informative.cgm.meta, aes(ymin=as.numeric(High), ymax=Inf, xmin=-Inf, xmax=Inf),\n              fill='#FFFF00', alpha=0.1, inherit.aes=FALSE) +\n    theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),\n          panel.background=element_blank(), axis.line=element_line(colour='black'),\n          axis.title.y=element_text(size=30),\n          axis.title.x=element_blank(),\n          axis.text.y=element_text(size=30),\n          axis.text.x=element_blank(),\n          strip.text.x=element_text(size=30),\n          plot.title=element_text(size=40, hjust=0.5)) +\n    ylab('Glucose value mg/dL') +\n    ggtitle(paste0('Daily Trends Across ', month)) +\n    scale_x_continuous(breaks=as.numeric(names(table(cgm.data$Day))),\n                       limits=c(min(as.numeric(names(table(cgm.data$Day)))),\n                                max(as.numeric(names(table(cgm.data$Day)))))) +\n    scale_y_continuous(breaks=c(0, 100, 200, 300, 400), limits=c(0, 400))\n\n  if(overlay==TRUE){\n    bp_trend <- bp_trend +\n      geom_segment(data=cgm.data[cgm.data$Event_Type=='Insulin',],\n                   aes(x=Day_Time, xend=Day_Time, y=0, yend=400), colour='red') +\n      geom_segment(data=cgm.data[cgm.data$Event_Type=='Carbs',],\n                   aes(x=Day_Time, xend=Day_Time, y=0, yend=400), colour='blue')\n  }\n\n  insulin_trend <- ggplot(data=cgm.data, aes(x=Day_Time)) +\n    geom_point(aes(y=Insulin_Value_u, colour='Insulin'), size=2) +\n    geom_point(aes(y=Carb_Value_grams/5, colour='Carbs'), size=2, shape=17) +\n    scale_y_continuous(sec.axis=sec_axis(~.*5, name='Carbs Value (grams)')) +\n    theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),\n          panel.background=element_blank(), axis.line=element_line(colour='black'),\n          axis.title=element_text(size=25),\n          axis.text=element_text(size=25),\n          strip.text.x=element_text(size=30),\n          plot.title=element_text(size=40, hjust=0.5),\n          legend.position='bottom',\n          legend.title=element_blank(),\n          legend.text=element_text(size=25)) +\n    scale_colour_manual(values=c('blue', 'red')) +\n    labs(x='Day',\n         y='Insulin value u') +\n    scale_x_continuous(breaks=as.numeric(names(table(cgm.data$Day))),\n                       limits=c(min(as.numeric(names(table(cgm.data$Day)))),\n                                max(as.numeric(names(table(cgm.data$Day))))))\n\n  print({\n    png(filename=file.name,\n        width=1800, height=1000)\n    ggpubr::ggarrange(bp_trend, insulin_trend, nrow=2, heights=c(3,1), align='v')\n  })\n  dev.off()\n\n\n\n}\n",
    "created" : 1550506184610.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "857263006",
    "id" : "7F0DC8EB",
    "lastKnownWriteTime" : 1550519290,
    "last_content_update" : 1550519151352,
    "path" : "R:/PrevMed/Projects/HAPO/Alan/CGM/Scripts/wiseCGM/R/monthly_time_series_plot.R",
    "project_path" : "R/monthly_time_series_plot.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}