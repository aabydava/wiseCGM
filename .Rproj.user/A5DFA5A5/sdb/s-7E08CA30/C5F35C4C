{
    "collab_server" : "",
    "contents" : "#' Hourly Boxplot\n#'\n#' Generate hourly boxplot\n#' @param cgm.data A dataframe of CGM data formatted by format_dexcom() for a patient, containing all timepoints\n#' @param informative.cgm.meta A dataframe of CGM meta data formatted by format_dexcom()\n#' @param file.name The name of the output file\n#' @export\n\nhourly_boxplot <- function(cgm.data, informative.cgm.meta,\n                           file.name=NULL){\n\n  ### percent of within target range for each hourly\n  ## for each hour, get the highest value, per month\n  cgm.data.month <- split(cgm.data, f=cgm.data$TP)\n  cgm.data.month.hour <- lapply(cgm.data.month, function(x) split(x, f=x$Hour))\n\n  cgm.mh.info <- lapply(names(cgm.data.month.hour), function(month){\n    lapply(names(cgm.data.month.hour[[month]]), function(hour){\n\n      temp <- cgm.data.month.hour[[month]][[hour]]\n      temp <- temp[temp$Event_Type=='EGV', ]\n\n      per.in.range <- paste0(round((100*sum(temp$TARGET=='On Target',na.rm=TRUE)/sum(!is.na(temp$TARGET))), 2), '%')\n      df.info <- data.frame(TP=month,\n                            Hour=hour,\n                            text=per.in.range,\n                            YMAX=max(temp$Glucose_Value_mg_dL, na.rm=TRUE),\n                            stringsAsFactors=FALSE)\n      return(df.info)\n\n    })\n  })\n\n  df.text <- lapply(cgm.mh.info, function(x){\n    do.call(rbind, x)\n  })\n\n  df.text <- do.call(rbind, df.text)\n  df.text$TP <- factor(df.text$TP, levels=levels(cgm.data$TP))\n\n  hr.bp <- ggplot(data=cgm.data[cgm.data$Event_Type=='EGV', ], aes(x=factor(Hour), y=Glucose_Value_mg_dL)) +\n    geom_boxplot(outlier.size=2.5) +\n    facet_wrap(.~TP, ncol=1) +\n    geom_rect(data=informative.cgm.meta, aes(ymin=0, ymax=as.numeric(`Urgent Low`), xmin=-Inf, xmax=Inf), fill='#FF0000', alpha=0.1, inherit.aes=FALSE) +\n    geom_rect(data=informative.cgm.meta, aes(ymin=as.numeric(`Urgent Low`), ymax=as.numeric(Low), xmin=-Inf, xmax=Inf), fill='#FFA500', alpha=0.1, inherit.aes=FALSE) +\n    geom_rect(data=informative.cgm.meta, aes(ymin=as.numeric(High), ymax=Inf, xmin=-Inf, xmax=Inf), fill='#FFFF00', alpha=0.1, inherit.aes=FALSE) +\n    geom_text(data=df.text, aes(x=factor(Hour), y=YMAX, label=text), vjust=-1, inherit.aes=FALSE) +\n    theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(),\n          panel.background=element_blank(), axis.line=element_line(colour='black'),\n          axis.title=element_text(size=30),\n          axis.text=element_text(size=30),\n          strip.text.x=element_text(size=30),\n          plot.title=element_text(size=40, hjust=0.5)) +\n    ylim(0, (max(cgm.data$Glucose_Value_mg_dL, na.rm=TRUE)+25))+\n    ylab('Glucose Value mg/dL') +\n    xlab('Hour of the Day') +\n    ggtitle('Hourly Trends Across Time Points')\n\n  if(!is.null(file.name)){\n    print({\n      png(filename=file.name,\n          width=1800, height=1000)\n      hr.bp\n    })\n    dev.off()\n  }\n\n  return(hr.bp)\n}\n\nutils::globalVariables(c('Hour', 'Glucose_Value_mg_dL', 'Urgent Low',\n                         'Low', 'High', 'YMAX', 'text','Day_Time',\n                         'png', 'dev.off'))\n\n",
    "created" : 1550267758558.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "656239846",
    "id" : "C5F35C4C",
    "lastKnownWriteTime" : 1551378590,
    "last_content_update" : 1551378590096,
    "path" : "R:/PrevMed/Projects/HAPO/Alan/CGM/Scripts/wiseCGM/R/hourly_boxplot.R",
    "project_path" : "R/hourly_boxplot.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}